package home

import (
    "strconv"

	"booking-api/data/request"
	"booking-api/data/response"
)

func GetSelected(selected uint, current uint) bool {
    if selected == current {
        return true
    }
    return false
}

// RentalInformationResponse renders a page with detailed information about a specific rental
templ RentalRoomForm( params request.RentalRoomCreateRequest, errors request.RentalRoomCreateRequestError, roomTypes []response.RoomTypeResponse , bedTypes []response.BedTypeResponse) {
        <div class="bg-white shadow-lg flex-col flex gap-2 p-8 max-w-screen-md flex-grow w-full mx-auto rounded-lg">
            <div class="w-full justify-between flex">
                <h2 class="text-xl font-bold">{params.Name}</h2>
                <span class="text-gray-500 text-sm">information can be changed later</span>
            </div>
           <div class="flex w-full gap-4">
             <div class="flex flex-col gap-2 w-full">
                <label for="name" class="font-semibold" >
                   Room Type
                </label>
                <select name="room_type_id" id="room_type_id" required class="select select-bordered">
                    <option value="">Select Room Type</option>
                    for _, roomType := range roomTypes {
                        if GetSelected(roomType.ID, params.RentalRoomTypeID) {
                            <option value={strconv.Itoa(int(roomType.ID))} selected>{roomType.Name}</option>
                        } else {
                            <option value={strconv.Itoa(int(roomType.ID))} >{roomType.Name}</option>
                        }
                    }
                </select>
            </div>
             <div class="flex flex-col gap-2 w-full">
                <label for="name" class="font-semibold">
                   Room Name
                </label>
                <input type="text" name="name" id="name" required class="input input-bordered" value={params.Name} />
                if len(errors.Name) > 0 {
                    <div class="text-sm text-error mt-1">{ errors.Name }</div>
                }
            </div>
           </div>
           <div class="flex w-full gap-4">
             <div class="flex flex-col gap-2 w-full">
                <label for="numberOfBeds" class="font-semibold">
                   Number of Beds
                </label>
                <input type="number" name="number_of_beds" id="number_of_beds" required class="input input-bordered" value={strconv.Itoa(len(params.Beds))}/>
            </div>
           </div>
           <div class="flex w-full gap-4">
             <div class="flex flex-col gap-2 w-full">
                <label for="floor" class="font-semibold">
                     Floor
                </label>
                <input type="number" name="floor" id="floor" required class="input input-bordered" value={strconv.Itoa(params.Floor)}/>
            </div>
           </div>
           <div class=" w-full ">
                  <div class="flex flex-col gap-1 w-full">
                    <label for="description" class="font-semibold">

                            Description
                    </label>
                    <textarea
                    value={params.Description}
                    rows="6"
                    name="description"
                    class="textarea textarea-bordered w-full "
                    >
                      </textarea>
                      if len(errors.Description ) > 0 {
                        <div class="text-sm text-error mt-1">{ errors.Description }</div>
                    }
                   </div>
               </div>
    </div>


}

