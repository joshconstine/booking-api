package home

import (
    "booking-api/view/layout"
    "booking-api/data/response"
	"strconv"

    "booking-api/view/ui"
	"booking-api/data/request"
)

func CreateGetBookingFormUrl(id int) string {
    return "/entityBookingForm/rentals/"  + strconv.Itoa(id)
}

func GetIdsFromAmens(amenities []response.AmenityResponse) []int {
    var ids []int
    for _, amen := range amenities {
        ids = append(ids, int(amen.ID))
    }
    return ids
}
// RentalInformationResponse renders a page with detailed information about a specific rental
templ RentalAdmin(rental response.RentalInformationResponse, amenities []response.SortedAmenityResponse) {
    @layout.App(true) {
      <div class="flex flex-col gap-4 md:mt-4 mt-1 items-center w-full pb-[300px] overflow">
            <div class=" px-8 w-full flex justify-between items-center">
                <a class="btn btn-outline rounded-full btn-sm">Questions?</a>
                <div class="flex items-center gap-2">
                    <a class="btn btn-md bg-branded-400">Admin view</a>
                    <a class="btn  btn-md">Public view</a>
                    <a class="btn btn-outline rounded-full btn-sm">Save and exit</a>
                </div>
            </div>
            <div class="max-w-screen-2xl  flex flex-col gap-4">
            <div class=" flex gap-4 items-center w-full">
                <h1 class="text-3xl font-bold text-center">{rental.Name}</h1>
                    if rental.RentalStatus.IsClean {

                        <div class="btn bg-green-500 btn-sm rounded-full">
                            <span class="text-white text-sm">Clean</span>
                        </div>
                    } else {
                        <div class="btn bg-red-500 btn-sm rounded-full">
                            <span class="text-white text-sm">Dirty</span>
                        </div>
                    }
            </div>
            <span>Property information</span>

            <div class="w-full flex  gap-4">
                    <div class="w-full h-72 rounded-lg bg-branded-400">
                        <img class="w-full h-full object-cover rounded-lg" src={rental.Photos[0].Photo.URL } alt="rental photo" />
                    </div>
                    <div class="flex flex-col gap-2 w-64">
                        <button class="bg-branded-400 btn items-center flex">
                            <span>Property info</span>
                            <i class="fa-regular fa-house"></i>
                        </button>
                        <button class="items-center gap-2 btn flex">
                            <span>Rooms info</span>
                           <i class="fa-regular fa-bed"></i>
                        </button>
                        <button class="items-center gap-2 btn flex ">
                            <span>Availability/Pricing</span>
                            <i class="fa-kit fa-regular-calendar-circle-dollar"></i>
                        </button>
                    </div>
                </div>
            </div>
            @ui.EntityPhotoList(rental.Photos)

            @RentalForm(request.CreateRentalStep1Params{
                RentalID: &rental.ID,
                Name: rental.Name,
                Description: rental.Description,
                Bedrooms: rental.Bedrooms,
                Bathrooms: rental.Bathrooms,
                Amenities: rental.Amenities,
                Guests: rental.Guests,
                AllowInstantBooking: rental.BookingRule.AllowInstantBooking,
                AllowPets: rental.BookingRule.AllowPets,
                Success: false,
                ParentProperty: false,
            }, RentalFormErrors{}, amenities)
        //    @ui.AddPhotoToEntityForm(ui.AddPhotoToEntityFormParams{
          //          EntityID: rental.ID,
            //        EntityType:"rentals",
              //  })
              @RentalDetails(RentalFormParams{
                    RentalID: rental.ID,
                    Name: rental.Name,
                    Description: rental.Description,
                    Bedrooms: int(rental.Bedrooms),
                    Bathrooms: rental.Bathrooms,
                })
                <div class="mb-4 p-4 shadow-lg rounded-lg">
                <h2 class="text-2xl font-semibold mb-4">Rooms</h2>
				<div>

                for _, room := range rental.RentalRooms {
                    <div class="mb-3">
                        <h3 class="text-xl font-semibold">{room.Name} - {room.RoomType.Name}</h3>
                        <p>{room.Description}</p>
                        <p><strong>Floor:</strong> {strconv.Itoa((room.Floor))}</p>

						<div>
						<strong>Beds:</strong>

							for _, bed := range room.Beds {
								<p>{bed.Name} </p>

							}
						</div>
                    </div>

                @ui.EntityPhotoList(room.Photos)


                }
            </div>
                @ui.AmenityList(rental.Amenities)

            </div>
            <div id="target-form"></div>
            <div class="mb-4 p-4 shadow-lg rounded-lg w-96">
                <h2 class="text-2xl font-semibold mb-4">Booking Information</h2>
                <button class="btn bg-branded-400" hx-get={CreateGetBookingFormUrl(int(rental.ID))} hx-swap="outerHTML" hx-target="#target-form"
                >
                    <i class="fa-solid fa-plus"></i>
                </button>
                <p><strong>Costs:</strong> <div>
                    @ui.EntityBookingCostList(rental.BookingCostItems)
			</div>
					</p>

                <p><strong>Adjustments:</strong>

				</p>
            </div>
        </div>


    }
	}

