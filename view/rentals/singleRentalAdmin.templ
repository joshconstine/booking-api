package home

import (
    "booking-api/view/layout"
    "booking-api/data/response"
	"strconv"

    "booking-api/view/ui"
	"booking-api/data/request"
)

func CreateGetBookingFormUrl(id int) string {
    return "/entityBookingForm/rentals/"  + strconv.Itoa(id)
}

func CreateGetBedroomFormUrl(id int) string {
    return "/rentals/" + strconv.Itoa(id) + "/bedrooms"
}
func CreateGetInformationFormUrl(id int) string {
    return "/rentals/" + strconv.Itoa(id) + "/information"
}
func CreateGetAvailabilityFormUrl(id int) string {
    return "/rentals/" + strconv.Itoa(id) + "/availability"
}
func GetIdsFromAmens(amenities []response.AmenityResponse) []int {
    var ids []int
    for _, amen := range amenities {
        ids = append(ids, int(amen.ID))
    }
    return ids
}
// RentalInformationResponse renders a page with detailed information about a specific rental
templ RentalAdmin(rental response.RentalInformationResponse, amenities []response.SortedAmenityResponse) {
    @layout.App(true) {
      <div class="flex flex-col gap-4 md:mt-4 mt-1 items-center w-full pb-[300px] overflow">
            <div class=" px-8 w-full flex justify-between items-center">
                <a class="btn btn-outline rounded-full btn-sm">Questions?</a>
                <div class="flex items-center gap-2">
                    <a class="btn btn-md bg-branded-400">Admin view</a>
                    <a class="btn  btn-md">Public view</a>
                    <a class="btn btn-outline rounded-full btn-sm">Save and exit</a>
                </div>
            </div> <div class="w-full flex flex-wrap mx-auto gap-4">
                 <aside class="flex-1">

                 </aside>
            <div class="max-w-screen-2xl flex-2 flex-grow w-screen-2xl ">
                <div class=" flex gap-4 items-center w-full">
                    <h1 class="text-3xl font-bold text-center">{rental.Name}</h1>
                    @ui.RentalStatusBadge(rental.RentalStatus, rental.ID)
                </div>
                <span>Property information</span>
            </div>
             <aside class="flex-1">

                 </aside>
                 </div>
           <div class="w-full flex flex-wrap mx-auto gap-4">
                 <aside class="flex-1">

                 </aside>
                <div class="w-full  flex-grow max-w-screen-md h-72 flex-2 rounded-lg bg-branded-400 justify-self-center align-self-center">
                    <img class="w-full h-full object-cover rounded-lg" src={rental.Photos[0].Photo.URL} alt="rental photo" />
                </div>
                @RentalAside(rental.ID)
                //<div class="flex-grow"></div>
            </div>

    <div id="rental-form"
        class="w-full"
    >
       @RentalInformationForm(rental, amenities)
    </div>



        </div>


    }
}
templ RentalAdminAvailability(rental response.RentalInformationResponse, params request.CreateRentalStep3Params, errors request.CreateRentalStep3Errors) {
@layout.App(true) {
<div class="flex flex-col gap-4 md:mt-4 mt-1 items-center w-full pb-[300px] overflow">
    <div class=" px-8 w-full flex justify-between items-center">
        <a class="btn btn-outline rounded-full btn-sm">Questions?</a>
        <div class="flex items-center gap-2">
            <a class="btn btn-md bg-branded-400">Admin view</a>
            <a class="btn  btn-md">Public view</a>
            <a class="btn btn-outline rounded-full btn-sm">Save and exit</a>
        </div>
    </div> <div class="w-full flex flex-wrap mx-auto gap-4">
        <aside class="flex-1">

        </aside>
        <div class="max-w-screen-2xl flex-2 flex-grow w-screen-2xl ">
            <div class=" flex gap-4 items-center w-full">
                <h1 class="text-3xl font-bold text-center">{rental.Name}</h1>
                @ui.RentalStatusBadge(rental.RentalStatus, rental.ID)
            </div>
            <span>Property information</span>
        </div>
        <aside class="flex-1">

        </aside>
    </div>
    <div class="w-full flex flex-wrap mx-auto gap-4">
        <aside class="flex-1">

        </aside>
        <div class="w-full  flex-grow max-w-screen-md h-72 flex-2 rounded-lg bg-branded-400 justify-self-center align-self-center">
            <img class="w-full h-full object-cover rounded-lg" src={rental.Photos[0].Photo.URL} alt="rental photo" />
        </div>
        @RentalAside(rental.ID)
        //<div class="flex-grow"></div>
    </div>

    <div id="rental-form"
         class="w-full"
    >
        @RentalAvailabilityForm(params,errors)

    </div>



</div>


}
}

templ RentalAdminRooms(rental response.RentalInformationResponse, params request.CreateRentalStep2Params, roomForm   request.UpdateRentalRoomRequest, errors request.CreateRentalStep2Errors, roomTypes []response.RoomTypeResponse , bedTypes []response.BedTypeResponse) {
@layout.App(true) {
<div class="flex flex-col gap-4 md:mt-4 mt-1 items-center w-full pb-[300px] overflow">
    <div class=" px-8 w-full flex justify-between items-center">
        <a class="btn btn-outline rounded-full btn-sm">Questions?</a>
        <div class="flex items-center gap-2">
            <a class="btn btn-md bg-branded-400">Admin view</a>
            <a class="btn  btn-md">Public view</a>
            <a class="btn btn-outline rounded-full btn-sm">Save and exit</a>
        </div>
    </div> <div class="w-full flex flex-wrap mx-auto gap-4">
        <aside class="flex-1">

        </aside>
        <div class="max-w-screen-2xl flex-2 flex-grow w-screen-2xl ">
            <div class=" flex gap-4 items-center w-full">
                <h1 class="text-3xl font-bold text-center">{rental.Name}</h1>
                @ui.RentalStatusBadge(rental.RentalStatus, rental.ID)
            </div>
            <span>Property information</span>
        </div>
        <aside class="flex-1">

        </aside>
    </div>
    <div class="w-full flex flex-wrap mx-auto gap-4">
        <aside class="flex-1">

        </aside>
        <div class="w-full  flex-grow max-w-screen-md h-72 flex-2 rounded-lg bg-branded-400 justify-self-center align-self-center">
            <img class="w-full h-full object-cover rounded-lg" src={rental.Photos[0].Photo.URL} alt="rental photo" />
        </div>
        @RentalAside(rental.ID)
        //<div class="flex-grow"></div>
    </div>

    <div id="rental-form"
         class="w-full"
    >
        @RentalBedroomsForm(params, roomForm, errors, roomTypes, bedTypes)

    </div>



</div>


}
}

templ RentalInformationForm(rental response.RentalInformationResponse, amenities []response.SortedAmenityResponse) {
<div class="w-full">
            @ui.EntityPhotoList(rental.Photos)
            @RentalForm(request.CreateRentalStep1Params{
                RentalID: rental.ID,
                Name: rental.Name,
                Description: rental.Description,
                Bedrooms: rental.Bedrooms,
                Bathrooms: rental.Bathrooms,
                Amenities: rental.Amenities,
                Address: rental.Address,
                Guests: rental.Guests,
                AllowInstantBooking: rental.BookingRule.AllowInstantBooking,
                AllowPets: rental.BookingRule.AllowPets,
                Success: false,
                ParentProperty: false,
            }, request.CreateRentalStep1Errors{}, amenities)
</div>
}

templ RentalAvailabilityForm(params request.CreateRentalStep3Params, errors request.CreateRentalStep3Errors){

<form

   hx-swap="outerHTML"
   hx-indicator="#loading"
   class="flex flex-col gap-4 w-full max-w-screen-3xl mx-auto p-4 shadow-lg rounded-lg"
   >
        <div class="bg-white shadow-lg flex-col flex gap-2 p-8 max-w-screen-md w-full mx-auto rounded-lg">
            <div class="w-full justify-between flex">
                <h2 class="text-xl font-bold">Availability</h2>
                <span class="text-gray-500 text-sm">information can be changed later</span>
            </div>
            @ui.BooleanField(params.OpenYearRound, "openYearRound", "Yes", "No", "Open all year round?")
        </div>
</form>
}

func BuildAdminAvailabilityUrl(id int) string {
    return "/rentals/" + strconv.Itoa(id) + "/admin/availability"
}
func BuildAdminInformationUrl(id int) string {
return "/rentals/" + strconv.Itoa(id) + "/admin/information"
}
func BuildAdminRoomUrl(id int) string {
return "/rentals/" + strconv.Itoa(id) + "/admin/rooms"
}
templ RentalAside(rentalId uint) {
  <aside class="flex flex-col gap-2 w-64 flex-1">
                    <div class="items-center gap-2 btn flex"  hx-indicator="#propInfo" hx-trigger="click" hx-push-url={string(templ.SafeURL(BuildAdminInformationUrl(int(rentalId))))}  hx-get={string(templ.SafeURL(CreateGetInformationFormUrl(int(rentalId))))}  type="button" hx-target="#rental-form">
                 <span id="propInfo" class="loading loading-dots loading-md htmx-indicator"></span>
                        <span>Property info</span>
                        <i class="fa-regular fa-house"></i>
                    </div>
                    <div class="items-center gap-2 btn flex"  hx-trigger="click" hx-indicator="#roomInfo" hx-get={string(templ.SafeURL(CreateGetBedroomFormUrl(int(rentalId))))}  type="button" hx-target="#rental-form"
        hx-push-url={string(templ.SafeURL(BuildAdminRoomUrl(int(rentalId))))}
                    >

                 <span id="roomInfo" class="loading loading-dots loading-md htmx-indicator"></span>

                        <span >Rooms info</span>
                        <i class="fa-regular fa-bed"></i>
                    </div>
      <div class="items-center gap-2 btn flex"  hx-trigger="click" hx-indicator="#availInfo" hx-get={string(templ.SafeURL(CreateGetAvailabilityFormUrl(int(rentalId))))}  type="button" hx-target="#rental-form"
        hx-push-url={string(templ.SafeURL(BuildAdminAvailabilityUrl(int(rentalId))))}
      >
          <span id="availInfo" class="loading loading-dots loading-md htmx-indicator"
          ></span>
                        <span>Availability/Pricing</span>
                        <i class="fa-kit fa-regular-calendar-circle-dollar"></i>
                    </div>
                </aside>
}

