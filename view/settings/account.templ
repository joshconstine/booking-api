package settings

import (
	
	"booking-api/models"

    "booking-api/view/layout"
	"booking-api/view"
    "booking-api/view/ui"
)

templ Index(user models.AuthenticatedUser, selected string) {
	@layout.App(true) {
		<div class="max-w-2xl w-full mx-auto mt-8">
			<div>
				// <h1 class="text-lg font-semibold border-b border-gray-700 pb-2">Profoile</h1>
				<div class="join">
					<button class="join-item btn bg-branded-400" hx-get="/settings/account/profile"
						hx-target="#profile-container"
					>Profile</button>
					<button class="join-item btn bg-branded-400" hx-get="/settings/account/subscriptions"
						hx-target="#profile-container"
					>Subscription</button>
					<button hx-target="#profile-container" class="join-item btn bg-branded-400" hx-get="/settings/account/team">Team</button>
					<button hx-target="#profile-container" class="join-item btn bg-branded-400" hx-get="/settings/account/finances">Finances</button>
					<button hx-target="#profile-container" class="join-item btn bg-branded-400" hx-get="/settings/account/notifications">Notifications</button>
					<button hx-target="#profile-container" class="join-item btn bg-branded-400" hx-get="/settings/account/cleaners">Cleaners</button>
					<button hx-target="#profile-container" class="join-item btn bg-branded-400" hx-get="/settings/account/security">Log in/Security</button>
				</div>
				<div id="profile-container">
				if selected == "profile" {
					@Profile(view.AuthenticatedUser(ctx))
				}
				if selected == "subscriptions" {
					@Subscription(view.AuthenticatedUser(ctx))
				}
				
					// @Profile(view.AuthenticatedUser(ctx))
				</div>
			</div>
		</div>
	}
}

templ Finances(user models.AuthenticatedUser) {
	<div class="max-w-2xl w-full mx-auto mt-8">
		<div>
			
			<div>
				<h2>Finances</h2>
					<div class="container">
						<div class="banner">
						</div>
						<div class="content">
						<h2 id="title"></h2>
						<p id="subtitle"></p>
						<div>
							<button id="sign-up-button" class="btn btn-ghost">
							Connect With Stripe
							</button>
						</div>
						<div id="embedded-onboarding-container">
						</div>
						<p id="error" class="error hidden">Something went wrong!</p>
						<div id="dev-callout" class="dev-callout hidden">
							<p id="connected-account-id" class="hidden"></p>
							<p id="creating-connected-account" class="hidden">Creating a connected account...</p>
						</div>
						<div class="info-callout">
							
						</div>
						</div>
					</div>
		<div id="error" hidden>Something went wrong!</div>
			</div>
		</div> 
		<script src="/public/stripe.js" type="module"></script>
	</div>
}
templ Team(user models.AuthenticatedUser) {
	<div class="max-w-2xl w-full mx-auto mt-8">
		<div>
			
			<div>
				<h2>Team</h2>
				<p>Manage your team</p>
			</div>
		</div>
	</div>
}

templ Notifications(user models.AuthenticatedUser) {
	<div class="max-w-2xl w-full mx-auto mt-8">
		<div>
			
			<div>
				<h2>Notifications</h2>
				<p>Manage your notifications</p>
			</div>
		</div>
	</div>
}

templ Cleaners(user models.AuthenticatedUser) {
	<div class="max-w-2xl w-full mx-auto mt-8">
		<div>
			
			<div>
				<h2>Cleaners</h2>
				<p>Manage your cleaners</p>
			</div>
		</div>
	</div>
}

templ Security(user models.AuthenticatedUser) {
	<div class="max-w-2xl w-full mx-auto mt-8">
		<div>
			
			<div>
				<h2>Security</h2>
				<p>Manage your security</p>
			</div>
		</div>
	</div>
}


templ Subscription(user models.AuthenticatedUser) {
	<div class="max-w-2xl w-full mx-auto mt-8">
		<div>
			
			<div>
				<h2>Subscription pro plan</h2>
				<p>Upgrade your subscription</p>
			</div>
		</div>
	</div>
}

templ Profile(user models.AuthenticatedUser) {
	// @layout.App(true) {
		<div class="max-w-2xl w-full mx-auto mt-8">
			<div>
				// <h1 class="text-lg font-semibold border-b border-gray-700 pb-2">Profile</h1>
			<dt>{view.AuthenticatedUser(ctx).User.FirstName}</dt>
			<dt>{view.AuthenticatedUser(ctx).User.LastName}</dt>
			<dt>{view.AuthenticatedUser(ctx).User.Username}</dt>
			<dt>{view.AuthenticatedUser(ctx).User.Email}</dt>
			<dt>{view.AuthenticatedUser(ctx).User.PhoneNumber}</dt>
			<div>
			</div>
				@ProfileForm(ProfileParams{
					Username: view.AuthenticatedUser(ctx).User.Username,
					FirstName: view.AuthenticatedUser(ctx).User.FirstName,
					LastName: view.AuthenticatedUser(ctx).User.LastName,
					Email: view.AuthenticatedUser(ctx).User.Email,
					PhoneNumber: view.AuthenticatedUser(ctx).User.PhoneNumber,

				}, ProfileErrors{})
			</div>
			 <ul>
			 for _, chat := range view.AuthenticatedUser(ctx).User.Chats {
				@ui.Chat(chat)
			}
			 </ul>
			   
   
		</div>
	// }
}

type ProfileParams struct {
	FirstName string
	LastName string
	Username string
	Email string
	PhoneNumber string

	Success  bool

}

type ProfileErrors struct {
	Username string
}

templ ProfileForm(params ProfileParams, errors ProfileErrors) {
	<form
		hx-put="/settings/account/profile"
		hx-swap="outerHTML"
	>
		<div class="sm:grid sm:grid-cols-3 sm:gap-4 sm:px-0 items-center mt-8">
			<dt class="">Username</dt>
			<dd class="sm:col-span-2 sm:mt-0">
				if params.Success {
					@ui.Toast("Username updated successfully")
				}
				<input
					class="input input-bordered w-full max-w-sm"
					value={ params.Username }
					name="username"
				/>
				if len(errors.Username) > 0 {
					<div class="text-sm text-error mt-1">{ errors.Username }</div>
				}
			</dd>
			<dt>First Name</dt>
			<dd class="sm:col-span-2 sm:mt-0">
				<input
					class="input input-bordered w-full max-w-sm"
					value={ params.FirstName }
					name="firstName"
				/>
			</dd>
			<dt>Last Name</dt>
			<dd class="sm:col-span-2 sm:mt-0">
				<input
					class="input input-bordered w-full max-w-sm"
					value={ params.LastName }
					name="lastName"
				/>
			</dd>
			
			
			<dt>Phone Number</dt>
			<dd class="sm:col-span-2 sm:mt-0">
				<input
					class="input input-bordered w-full max-w-sm"
					value={ params.PhoneNumber }
					name="phoneNumber"
				/>
			</dd>

			<dt></dt>
			<dd class="sm:col-span-2 sm:mt-0">
				<button class="btn btn-primary">save</button>
			</dd>
		</div>
	</form>
}
