CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `available_timeblocks` AS with `OrderedTimeblocks` as (select `entity_timeblocks`.`entity_id` AS `entity_id`,`entity_timeblocks`.`entity_type` AS `entity_type`,`entity_timeblocks`.`start_time` AS `start_time`,`entity_timeblocks`.`end_time` AS `end_time`,lag(`entity_timeblocks`.`end_time`) OVER (PARTITION BY `entity_timeblocks`.`entity_id`,`entity_timeblocks`.`entity_type` ORDER BY `entity_timeblocks`.`start_time` )  AS `prev_end_time` from `entity_timeblocks`) select `OrderedTimeblocks`.`entity_id` AS `entity_id`,`OrderedTimeblocks`.`entity_type` AS `entity_type`,`OrderedTimeblocks`.`prev_end_time` AS `available_start_time`,`OrderedTimeblocks`.`start_time` AS `available_end_time` from `OrderedTimeblocks` where ((`OrderedTimeblocks`.`prev_end_time` is not null) and (`OrderedTimeblocks`.`start_time` > `OrderedTimeblocks`.`prev_end_time`)) order by `OrderedTimeblocks`.`entity_id`,`OrderedTimeblocks`.`entity_type`,`OrderedTimeblocks`.`prev_end_time`

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `booking_status_totals` AS select `bs`.`name` AS `name`,count(`eb`.`id`) AS `total` from (`entity_bookings` `eb` join `booking_statuses` `bs` on((`eb`.`booking_status_id` = `bs`.`id`))) where (`eb`.`deleted_at` is null) group by `bs`.`name`

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `entity_reviews_avg_ratings` AS select `er`.`entity_type` AS `entity_type`,`er`.`entity_id` AS `entity_id`,coalesce((case when (`er`.`entity_type` = 'rentals') then `r`.`name` when (`er`.`entity_type` = 'boats') then `b`.`name` end),'Unknown') AS `entity_name`,avg(`er`.`rating`) AS `average_rating` from ((`entity_reviews` `er` left join `rentals` `r` on(((`er`.`entity_id` = `r`.`id`) and (`er`.`entity_type` = 'rentals')))) left join `boats` `b` on(((`er`.`entity_id` = `b`.`id`) and (`er`.`entity_type` = 'boats')))) group by `er`.`entity_type`,`er`.`entity_id`,`entity_name`

CREATE ALGORITHM=UNDEFINED DEFINER=`root`@`%` SQL SECURITY DEFINER VIEW `entityBookingCostTotals` AS select coalesce(`rentals`.`account_id`,`boats`.`account_id`) AS `account_id`,sum(`bci`.`amount`) AS `total_amount`,`bct`.`name` AS `cost_type_name`,coalesce(`rentals`.`name`,`boats`.`name`) AS `entity_name`,min(`bd`.`booking_start_date`) AS `first_booking_start_date`,max(`bd`.`booking_start_date`) AS `last_booking_start_date` from ((((((`booking_cost_items` `bci` join `booking_cost_types` `bct` on((`bci`.`booking_cost_type_id` = `bct`.`id`))) join `entity_bookings` `eb` on((`bci`.`entity_booking_id` = `eb`.`id`))) join `bookings` `b` on((`eb`.`booking_id` = `b`.`id`))) join `booking_details` `bd` on((`b`.`id` = `bd`.`booking_id`))) left join `rentals` on(((`eb`.`entity_type` = 'rentals') and (`eb`.`entity_id` = `rentals`.`id`)))) left join `boats` on(((`eb`.`entity_type` = 'boats') and (`eb`.`entity_id` = `boats`.`id`)))) group by `entity_name`,`cost_type_name`,`account_id`

